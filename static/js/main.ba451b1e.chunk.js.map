{"version":3,"sources":["components/Note.js","components/AddNewNote.js","components/NotesList.js","components/SearchBar.js","components/Header.js","App.js","index.js"],"names":["Note","note","handleDeleteNote","handleEditNote","useState","color","setcolor","className","style","backgroundColor","title","id","properties","target","text","date","trigger","animation","toggle","size","speed","position","on","colors","onChangeComplete","hex","edit","onClick","trash2","window","confirm","AddNewNote","handleAddNote","noteText","setnoteText","noteTitle","setnoteTitle","ColoredLine","height","width","row","cols","placeholder","value","onChange","event","fontSize","rows","length","alert","NotesList","notes","map","SearchBar","handleSearchNote","searchToX","type","name","Header","handleDarkMode","previousDarkModeVal","localStorage","removeItem","App","nanoid","setNote","searchText","setsearchText","darkMode","setdarkMode","useEffect","savedData","JSON","parse","getItem","setItem","stringify","filter","toLowerCase","includes","Date","UserNewNote","toLocaleDateString","oldID","ToEditNote","Arr","console","log","Newtitle","prompt","NewContent","push","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba451b1e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useState} from \"react\";\r\nimport UseAnimations from \"react-useanimations\";\r\nimport trash2 from \"react-useanimations/lib/trash2\";\r\nimport edit from \"react-useanimations/lib/edit\";\r\nimport toggle from \"react-useanimations/lib/toggle\";\r\n// import airplay from \"react-useanimations/lib/airplay\";\r\nimport ReactLinkify from \"react-linkify\";\r\nimport { CirclePicker } from \"react-color\";\r\nimport Popup from \"reactjs-popup\";\r\nimport \"reactjs-popup/dist/index.css\";\r\n\r\n\r\nexport const Note = ({ note, handleDeleteNote, handleEditNote }) => {\r\n  const PurgeNote = () => {\r\n    let confirmAction = window.confirm(\"Are you sure to delete this note?\");\r\n    if (confirmAction) handleDeleteNote(note.id);\r\n  };\r\n  const EditIt = () => {\r\n    handleEditNote(note.id);\r\n  };\r\n  const [color, setcolor] = useState(\"#fef68a\");\r\n\r\n  // const [image, setImage] = React.useState(\"\");\r\n  // const imageRef = React.useRef(null);\r\n\r\n  // function useDisplayImage() {\r\n  //   const [result, setResult] = React.useState(\"\");\r\n\r\n  //   function uploader(e) {\r\n  //     const imageFile = e.target.files[0];\r\n\r\n  //     const reader = new FileReader();\r\n  //     reader.addEventListener(\"load\", (e) => {\r\n  //       setResult(e.target.result);\r\n  //     });\r\n\r\n  //     reader.readAsDataURL(imageFile);\r\n  //   }\r\n\r\n  //   return { result, uploader };\r\n  // }\r\n\r\n  // const { result, uploader } = useDisplayImage();\r\n  // useEffect(() => {\r\n  //   const savedData = localStorage.getItem(\"MyColors\");\r\n  //   if (savedData) {\r\n  //     setcolor(savedData);\r\n  //     console.log(savedData);\r\n  //   }\r\n  // }, []);\r\n\r\n  // //Save \"notes\" in json string format to local storage with key of \"MyKeytoGetData\"\r\n  // useEffect(() => {\r\n  //   localStorage.setItem(\"MyColors\", color);\r\n  // }, [color]);\r\n\r\n  return (\r\n    <div className=\"note\" style={{ backgroundColor: color }}>\r\n      <div className=\"noteHeader\">\r\n        <h3>{note.title}</h3>\r\n        <span id=\"noteText\">\r\n          <ReactLinkify\r\n            properties={{\r\n              target: \"_blank\",\r\n            }}\r\n          >\r\n            {note.text}\r\n          </ReactLinkify>\r\n        </span>\r\n        {/* <br />\r\n        {result ? (\r\n          <div className=\"Theimg\" style={{ width: \"30%\", height: \"auto\" }}>\r\n            {result && <img ref={imageRef} src={result} alt=\"\" />}\r\n          </div>\r\n        ) : (\r\n          <div style={{ display: \"none\" }}></div>\r\n        )} */}\r\n      </div>\r\n\r\n      <div className=\"note-footer\">\r\n        <small>{note.date}</small>\r\n        <Popup\r\n          trigger={\r\n            <div>\r\n              <UseAnimations\r\n                animation={toggle}\r\n                className=\"delete-icon\"\r\n                // onClick={() => setShow(!show)}\r\n                size={26}\r\n                speed={0.8}\r\n              />\r\n            </div>\r\n          }\r\n          position=\"top center\"\r\n          on=\"hover\"\r\n        >\r\n          <div>\r\n            <CirclePicker\r\n              colors={[\"#fef68a\", \"#f44336\", \"#e91e63\", \"#9c27b0\", \"#673ab7\"]}\r\n              color={color}\r\n              onChangeComplete={(color) => {\r\n                setcolor(color.hex);\r\n              }}\r\n            />\r\n          </div>\r\n        </Popup>\r\n\r\n        {/* <Popup\r\n          trigger={\r\n            <div>\r\n              <UseAnimations\r\n                animation={airplay}\r\n                className=\"delete-icon\"\r\n                // onClick={() => setShow(!show)}\r\n                size={26}\r\n                speed={0.8}\r\n              />\r\n            </div>\r\n          }\r\n          position=\"top center\"\r\n          on=\"hover\"\r\n        >\r\n          <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n            <input\r\n              id=\"fileUpload\"\r\n              type=\"file\"\r\n              style={{ color: \"rgba(0,0,0,0)\" }}\r\n              onChange={(e) => {\r\n                setImage(e.target.files[0]);\r\n                uploader(e);\r\n              }}\r\n            />\r\n            <label htmlFor=\"fileUpload\">Add Image</label>\r\n          </div>\r\n        </Popup> */}\r\n\r\n        <UseAnimations\r\n          animation={edit}\r\n          className=\"edit-icon\"\r\n          onClick={EditIt}\r\n          size={26}\r\n          speed={0.8}\r\n        />\r\n        <UseAnimations\r\n          animation={trash2}\r\n          className=\"delete-icon\"\r\n          onClick={PurgeNote}\r\n          size={26}\r\n          speed={0.8}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport const AddNewNote = ({ handleAddNote }) => {\r\n  const [noteText, setnoteText] = useState(\"\");\r\n  const [noteTitle, setnoteTitle] = useState(\"\");\r\n  const length = 200;\r\n  const handleChangeText = (event) => {\r\n    if(length-event.target.value.length>=0)  \r\n        setnoteText(event.target.value);\r\n  };\r\n  const handleChangeTitle = (event) => {\r\n    setnoteTitle(event.target.value);\r\n  };\r\n  const handleSaveClick = () => {\r\n    if (!noteTitle || !noteText) {\r\n      alert(\"Not Specified\");\r\n    } else {\r\n      handleAddNote(noteText, noteTitle);\r\n    }\r\n    setnoteTitle(\"\");\r\n    setnoteText(\"\");\r\n  };\r\n\r\n  const ColoredLine = ({ color }) => (\r\n    <hr\r\n      style={{\r\n        color: color,\r\n        backgroundColor: color,\r\n        height: 1,\r\n        width:\"100%\"\r\n      }}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <div className=\"note new\">\r\n      <textarea\r\n        row=\"1\"\r\n        cols=\"10\"\r\n        placeholder=\"Title\"\r\n        value={noteTitle}\r\n        onChange={handleChangeTitle}\r\n        style={{fontSize:\"120%\"}}\r\n      ></textarea>\r\n      <ColoredLine color=\"black\"/>\r\n      <textarea\r\n        rows=\"8\"\r\n        cols=\"10\"\r\n        placeholder=\"Type to add a note\"\r\n        value={noteText}\r\n        onChange={handleChangeText}\r\n      ></textarea>\r\n      <div className=\"note-footer\">\r\n        <small>{length-noteText.length} Remaining</small>\r\n        <button className=\"saveBtn\" onClick={handleSaveClick}>\r\n          Save\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { Note } from \"./Note\";\r\nimport { AddNewNote } from \"./AddNewNote\";\r\nexport const NotesList = ({\r\n  notes,\r\n  handleAddNote,\r\n  handleDeleteNote,\r\n  handleEditNote,\r\n}) => {\r\n  return (\r\n    <div className=\"notes-list\">\r\n      {notes.map((note) => (\r\n        <Note\r\n          note={note}\r\n          key={note.id}\r\n          handleDeleteNote={handleDeleteNote}\r\n          handleEditNote={handleEditNote}\r\n        />\r\n      ))}\r\n      <AddNewNote handleAddNote={handleAddNote} />\r\n    </div>\r\n  );\r\n};\r\n ","import React from 'react';\r\nimport UseAnimations from \"react-useanimations\";\r\nimport searchToX from \"react-useanimations/lib/searchToX\";\r\nexport const SearchBar = ({handleSearchNote}) => {\r\n  return (\r\n    <>\r\n      <div className=\"SearchBox\">\r\n        <UseAnimations animation={searchToX} />\r\n        <input type=\"text\" onChange={(event)=>handleSearchNote(event.target.value)} name=\"search\" id=\"searchBar\" placeholder=\"Search\" />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react'\r\nexport const Header = ({ handleDarkMode}) => {\r\n  const clearRecords = ()=>{\r\n    if(window.confirm(\"The Notes app stores notes data locally on your device.Do you want to delete all data.NOTE: Your notes will be unrecoverable and the sites will show default notes after this action\")){\r\n      window.localStorage.removeItem(\"MyKeytoGetData\");\r\n      alert(\"Data Removal Done! You can refresh the site.\");\r\n    }\r\n    else{\r\n      alert(\"Data Removal Cancelled\");\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"header\">\r\n      <h1>Notes</h1>\r\n      <button\r\n        onClick={() =>\r\n          handleDarkMode((previousDarkModeVal) => !previousDarkModeVal)\r\n        }\r\n        className=\"modeBtn\"\r\n      >\r\n        Toggle Mode\r\n      </button>\r\n      <button onClick={()=>{clearRecords()}} className=\"modeBtn\">\r\n        Remove Saved Notes\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import \"./App.css\";\nimport React from \"react\";\nimport { NotesList } from \"./components/NotesList\";\nimport { nanoid } from \"nanoid\";\nimport { useState, useEffect } from \"react\";\nimport {SearchBar} from \"./components/SearchBar\";\nimport { Header } from \"./components/Header\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nfunction App() {\n  const [notes, setNote] = useState([\n    {\n      id: nanoid(),\n      title: \"Welcome User!\\nFeature #1\",\n      text: \"You can Add Notes,Edit them and delete them!\",\n      date: \"3/6/2021\",\n    },\n    {\n      id: nanoid(),\n      title: \"Feature #2\",\n      text: \"Can't find a note? Use the search bar to get it.\",\n      date: \"3/6/2021\",\n    },\n    {\n      id: nanoid(),\n      title: \"Feature #3\",\n      text: 'You can even add web links and they will remain as \"links\".Check this out: https://www.linkedin.com/in/rutuj-runwal/',\n      date: \"3/6/2021\",\n    },\n    {\n      id: nanoid(),\n      title: \"Feature #4\",\n      text: \"You can change color of your note.Use the icons near the date to explore more\",\n      date: \"3/6/2021\",\n    },\n  ]);\n\n  const [searchText, setsearchText] = useState(\"\");\n  const [darkMode, setdarkMode] = useState(false);\n\n  useEffect(() => {\n    const savedData = JSON.parse(localStorage.getItem(\"MyKeytoGetData\"));\n    if(savedData){\n      setNote(savedData);\n    }\n  }, [])\n\n  //Save \"notes\" in json string format to local storage with key of \"MyKeytoGetData\"\n  useEffect(() => {\n    localStorage.setItem(\"MyKeytoGetData\", JSON.stringify(notes));\n  }, [notes]);\n  // window.localStorage.clear();\n\n  const addNote = (text, title) => {\n    const date = new Date();\n    let UserNewNote = {\n      id: nanoid(),\n      title: title,\n      text: text,\n      date: date.toLocaleDateString(),\n    };\n    setNote([...notes, UserNewNote]);\n  };\n\n  const editNote = (oldID) => {\n    let ToEditNote = notes.filter((note) => note.id === oldID);\n    const Arr = notes.filter((note) => note.id !== oldID);\n    console.log(Arr);\n    var Newtitle = prompt(\n      \"Edit Title[Press Enter/Ok for no change]\",\n      ToEditNote[0].title\n    );\n    var NewContent = prompt(\n      \"Edit Content of Note[Press Enter/Ok for no change]\",\n      ToEditNote[0].text\n    );\n    ToEditNote[0].text = NewContent;\n    ToEditNote[0].title = Newtitle;\n    Arr.push(ToEditNote[0]);\n    setNote(Arr);\n  };\n\n  const deleteNote = (id) => {\n    setNote(notes.filter((note) => note.id !== id));\n  };\n\n  const [loading, setLoading] = useState(false);\n\n  return (\n      <div className={`${darkMode && \"dark-mode\"}`}>\n        <div className=\"container\">\n          <Header handleDarkMode={setdarkMode} />\n          <SearchBar handleSearchNote={setsearchText} />\n          <NotesList\n            notes={notes.filter(\n              (note) =>\n                note.text.toLowerCase().includes(searchText.toLowerCase()) ||\n                note.title.toLowerCase().includes(searchText.toLowerCase())\n            )}\n            handleAddNote={addNote}\n            handleDeleteNote={deleteNote}\n            handleEditNote={editNote}\n          />\n        </div>\n      </div>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}